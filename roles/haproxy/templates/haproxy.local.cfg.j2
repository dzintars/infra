global
    log 127.0.0.1 local2
    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    maxconn 4000
    user haproxy
    group haproxy
    daemon
    stats socket /var/lib/haproxy/stats
    ssl-default-bind-options ssl-min-ver TLSv1.2 # Set minimal version globaly
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM
    
defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 1m
    timeout server 1m
    timeout http-keep-alive 10s
    timeout check 10s
    maxconn 3000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

listen stats # Define a listen section called "stats"
    bind :19000 # Listen on localhost:9000
    mode http
    option forwardfor
    option httpclose
    stats enable  # Enable stats page
    stats show-legends
    stats refresh 5s
    stats hide-version  # Hide HAProxy version
    stats realm Haproxy\ Statistics  # Title text for popup window
    stats uri /haproxy_stats  # Stats URI
    stats auth admin:password  # Authentication credentials
    monitor-uri /healthz

#===========================================================

frontend http_front
    mode http
    bind *:80
    # Certificates and Private key should be appended in single file. Order matters.
    # If HAProxy does not start, try `sudo setenforce 0`
    # https://www.haproxy.com/blog/haproxy-2-0-and-beyond/
    bind *:443 ssl crt /etc/letsencrypt/live/{{ cluster.fqdn }}/{{ cluster.fqdn }}.pem alpn h2,http/1.1
    http-request redirect scheme https unless { ssl_fc }
    # https://serverfault.com/a/677060/440073
    acl host_my hdr(host) -i my.{{ cluster.fqdn }}
    use_backend my_server if host_my
    # default_backend my_server

backend my_server
    mode http
    server workstation 127.0.0.1:3000 ssl verify none alpn h2
