---
# tasks file for roles/nvidia

- name: install packages
  become: true
  dnf:
    name: "{{ item }}"
    state: latest
  loop: "{{ packages }}"

# - name: unload nouveau
#   become: true
#   modprobe:
#     name: nouveau
#     state: absent
#   ignore_errors: true

- name: blacklist nouveau
  become: true
  lineinfile:
    path: /etc/modprobe.d/blacklist.conf
    line: blacklist nouveau
    state: present
    create: yes

- name: disable nonveau, opensource version of NVIDIA graphics driver
  become: true
  lineinfile:
    path: "/etc/sysconfig/grub"
    backrefs: yes
    regexp: '^(GRUB_CMDLINE_LINUX=(?!.*rd.driver.blacklist\=nouveau)\"[^\"]+)(\".*)'
    line: '\1 rd.driver.blacklist=nouveau\2'
    state: present
    backup: yes

- name: update grub2 conf BIOS
  become: true
  command: grub2-mkconfig -o /boot/grub2/grub.cfg

- name: update grub2 conf UEFI
  become: true
  command: grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg

- name: remove nouveau driver
  become: true
  dnf:
    name: xorg-x11-drv-nouveau
    state: absent

- name: backup old initramfs nouveau image
  become: true
  copy:
    src: "/boot/initramfs-{{ ansible_kernel }}.img"
    dest: "/boot/initramfs-{{ ansible_kernel }}-nouveau.img"
    remote_src: yes

- name: create new initramfs image
  become: true
  command: dracut --force /boot/initramfs-{{ ansible_kernel }}.img {{ ansible_kernel }}

# - name: Reboot host and wait for it to restart
#   reboot:
#     msg: "Reboot initiated by Ansible"
#     connect_timeout: 5
#     reboot_timeout: 600
#     pre_reboot_delay: 0
#     post_reboot_delay: 30
#     test_command: whoami

- name: download Nvidia driver
  get_url:
    url: "http://us.download.nvidia.com/XFree86/Linux-x86_64/{{ driver_version }}/NVIDIA-Linux-x86_64-{{ driver_version }}.run"
    dest: $HOME
    mode: '0700'

######
# When running locally the final installation i do manually
# Ideally, i should run it form my other machine or to think, how can i continue ansible task after the host reboot.
######

# - name: Install Nvidia Driver
#   become: yes
#   command: "/bin/bash $HOME/NVIDIA-Linux-x86_64-{{ driver_version }}.run -q -a -n -X -s"

# - name: Remove driver file
#   file:
#     path: $HOME/NVIDIA-Linux-x86_64-{{ driver_version }}.run
#     state: absent

# - name: Reboot host and wait for it to restart
#   reboot:
#     msg: "Reboot initiated by Ansible"
#     connect_timeout: 5
#     reboot_timeout: 600
#     pre_reboot_delay: 0
#     post_reboot_delay: 30
#     test_command: whoami

