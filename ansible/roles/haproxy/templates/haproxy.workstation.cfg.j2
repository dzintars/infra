# This configuration is for my personal local dev-test needs only.
# Please use `haproxy.bastion.cf.j2` to set up the OpenShift cluster.

global
    log 127.0.0.1 local2
    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    maxconn 4096
    user haproxy
    group haproxy
    daemon
    stats socket /var/lib/haproxy/stats
    # intermediate configuration, tweak to your needs
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam.pem
    # Be carefull about SELinux. If you get error there.. for debuging use `sudo setenforce 0`
    # ssl-dh-param-file /home/dzintars/.tls/{{ fqdn }}/dhparam.pem
    tune.ssl.default-dh-param 4096

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option http-pretend-keepalive
    option forwardfor except 127.0.0.1/8
    option originalto
    option redispatch
    retries 3
    backlog 10000
    timeout http-request 15s
    timeout queue 30s
    timeout client 25s
    timeout connect 5s
    timeout server 25m
    timeout tunnel 3600s
    timeout http-keep-alive 1s
    timeout check 10s
    timeout tarpit 60s
    default-server inter 3s rise 2 fall 3
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

listen stats # Define a listen section called "stats"
    bind :9001 # Listen on localhost:9001/stats
    mode http
    option forwardfor
    option httpclose
    stats enable  # Enable stats page
    stats show-legends
    stats refresh 10s
    stats hide-version  # Hide HAProxy version
    stats realm Haproxy\ Statistics  # Title text for popup window
    stats uri /stats  # Stats URI
    stats auth admin:password  # Authentication credentials
    monitor-uri /healthz

#===========================================================

frontend http-in
  bind *:80
  # maxconn 50

  # Limiting Request Rates
  stick-table type ip size 100k expire 30s store http_req_rate(10s)
  http-request track-sc0 src table per_ip_rates
  http-request deny deny_status 429 if { sc_http_req_rate(0) gt 100 }

  # Deny illegal user agents
  http-request deny if { req.hdr(user-agent) -i -m sub curl phantomjs slimerjs }
  http-request deny unless { req.hdr(user-agent) -m found }

  # Define Let's Encrypt path
  acl uri_letsencrypt path_beg /.well-known/acme-challenge/

  # Redirect all traffic except Let's Encrypt path
  redirect scheme https if !{ ssl_fc } !uri_letsencrypt

  # Add security headers
  http-response add-header Content-Security-Policy upgrade-insecure-requests
  http-response set-header X-Frame-Options DENY
  # http-response set-header X-Content-Type-Options nosniff
  http-response set-header X-XSS-Protection "1; mode=block"
  http-response set-header Referrer-Policy no-referrer-when-downgrade

  # Define backends
  use_backend default.backend if uri_letsencrypt
  default_backend default.backend


frontend https-in
  # Certificate and Private key should be appended in single file. Order matters.
  # If HAProxy does not start, try `sudo setenforce 0`
  # https://www.haproxy.com/blog/haproxy-2-0-and-beyond/
  # TODO: Organize into separate frontends
  bind *:443 ssl alpn h2,http/1.1 crt /etc/letsencrypt/live/{{ fqdn }}/haproxy.pem ecdhe secp384r1
  #bind *:443 ssl alpn h2,http/1.1 crt /etc/letsencrypt/live/{{ fqdn }}/haproxy.pem crt /etc/letsencrypt/live/dzintars.dev/haproxy.pem crt /etc/letsencrypt/live/merumore.com/haproxy.pem ecdhe secp384r1
  #bind *:443 ssl alpn h2,http/1.1 crt /etc/letsencrypt/live/{{ fqdn }}/fullchain.pem crt /etc/letsencrypt/live/dzintars.dev/fullchain.pem crt /etc/letsencrypt/live/merumore.com/fullchain.pem ecdhe secp384r1
  http-response replace-header Location ^http://(.*)$	https://\1
  maxconn 60000

  http-request set-header X-Forwarded-Proto https
  http-request set-header X-Forwarded-Port 443
  capture request header X-Forwarded-For len 15

  # HSTS (63072000 or 31536000 seconds). Be carefull!!! Read about it!!!
  http-response set-header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload;"

  # Limiting Request Rates
  http-request track-sc0 src table per_ip_rates
  http-request deny deny_status 429 if { sc_http_req_rate(0) gt 1000 }

  # Deny illegal user agents
  http-request deny if { req.hdr(user-agent) -i -m sub phantomjs slimerjs }
  http-request deny unless { req.hdr(user-agent) -m found }

  # Add security headers
  http-response add-header Content-Security-Policy upgrade-insecure-requests
  http-response set-header X-Content-Type-Options nosniff
  http-response set-header X-XSS-Protection "1; mode=block"
  http-response set-header Referrer-Policy no-referrer-when-downgrade

  # http-response set-header X-Frame-Options DENY
	http-response set-header X-Frame-Options SAMEORIGIN
	http-response del-header X-Powered-By
	http-response del-header Server
	http-response del-header X-Apache-Server-ID
	# # http-response set-header Content-Security-Policy-Report-Only "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self'; connect-src 'self'; font-src 'self'; object-src 'self'; media-src 'self'; child-src 'self'; sandbox 'self'; report-uri 'self'; form-action 'self'; frame-ancestors 'self'"
	# http-response set-header Feature-Policy "geolocation 'none'; midi 'none'; notifications 'none'; push 'none'; sync-xhr 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; speaker 'none'; vibrate 'none'; fullscreen 'none'; payment 'none'"

  # https://serverfault.com/a/677060/440073
  acl dev.{{ fqdn }}.host hdr(host) -i dev.{{ fqdn }}
  use_backend dev.{{ fqdn }}.backend if dev.{{ fqdn }}.host

  acl cloud.{{ fqdn }}.host hdr(host) -i cloud.{{ fqdn }}
  use_backend cloud.{{ fqdn }}.backend if cloud.{{ fqdn }}.host

  acl office.{{ fqdn }}.host hdr(host) -i office.{{ fqdn }}
  use_backend office.{{ fqdn }}.backend if office.{{ fqdn }}.host

  acl my.{{ fqdn }}.host hdr(Host) -i my.{{ fqdn }}
  use_backend my.{{ fqdn }}.backend if my.{{ fqdn }}.host

  # acl api.{{ fqdn }}.host hdr(Host) -i api.{{ fqdn }}
  # use_backend api.{{ fqdn }}.backend if api.{{ fqdn }}.host

  acl jenkins.{{ fqdn }}.host hdr(Host) -i jenkins.{{ fqdn }}
  use_backend jenkins.{{ fqdn }}.backend if jenkins.{{ fqdn }}.host

  acl vault.{{ fqdn }}.host hdr(host) -i vault.{{ fqdn }}
  use_backend vault.{{ fqdn }}.backend if vault.{{ fqdn }}.host

  acl s3.{{ fqdn }}.host hdr(host) -i s3.{{ fqdn }}
  use_backend s3.{{ fqdn }}.backend if s3.{{ fqdn }}.host

  acl registry.{{ fqdn }}.host hdr(host) -i registry.{{ fqdn }}
  use_backend registry.{{ fqdn }}.backend if registry.{{ fqdn }}.host

  acl dzintars.dev.host hdr(host) -i dzintars.dev
  use_backend dzintars.dev.backend if dzintars.dev.host

  acl merumore.com.host hdr(host) -i merumore.com
  use_backend merumore.com.backend if merumore.com.host

  acl hdr_connection_upgrade hdr(Connection)  -i upgrade
  acl hdr_upgrade_websocket  hdr(Upgrade)     -i websocket
  use_backend websocket.backend if hdr_connection_upgrade hdr_upgrade_websocket

  default_backend default.backend

# **************************************************************
# Backends
# **************************************************************

backend my.{{ fqdn }}.backend
  balance roundrobin
  http-request add-header X-Forwarded-Proto https
  compression algo gzip
  compression type text/html text/plain text/css
  # https://serverfault.com/a/887396/440073
  # option httpchk HEAD / HTTP/1.1\r\nHost:\ my.{{ fqdn }}
  server {{ name }} {{ network }}.{{ host }}:8081 check

backend dev.{{ fqdn }}.backend
  balance roundrobin
  http-request add-header X-Forwarded-Proto https
  # option httpchk HEAD / h2,HTTP/1.1\r\nHost:\ dev.{{ fqdn }}
  # option httpchk HEAD / HTTP/1.1\r\nHost:\ dev.{{ fqdn }}
  server {{ name }} 127.0.0.1:3000 check
  # server {{ name }} 127.0.0.1:3000 ssl verify none alpn h2,HTTP/1.1 check

backend api.{{ fqdn }}.backend
  balance roundrobin
  http-request add-header X-Forwarded-Proto https
  # option httpchk HEAD / HTTP/1.1\r\nHost:\ api.{{ fqdn }}
  server {{ name }} 127.0.0.1:9090 check

backend jenkins.{{ fqdn }}.backend
  balance roundrobin
  http-request add-header X-Forwarded-Proto https
  compression algo gzip
  compression type text/html text/plain text/css
  # https://serverfault.com/a/887396/440073
  # option httpchk HEAD / HTTP/1.1\r\nHost:\ jenkins.{{ fqdn }}
  server {{ name }} {{ network }}.{{ host }}:9093 check

backend vault.{{ fqdn }}.backend
  balance roundrobin
  http-request add-header X-Forwarded-Proto https
  compression algo gzip
  compression type text/html text/plain text/css
  # https://serverfault.com/a/887396/440073
  # option httpchk HEAD / HTTP/1.1\r\nHost:\ vault.{{ fqdn }}
  server {{ name }} {{ network }}.{{ host }}:8200 ssl verify none alpn h2,HTTP/1.1 check

backend s3.{{ fqdn }}.backend
  balance roundrobin
  http-request add-header X-Forwarded-Proto https
  compression algo gzip
  compression type text/html text/plain text/css
  # https://serverfault.com/a/887396/440073
  # option httpchk HEAD / HTTP/1.1\r\nHost:\ s3.{{ fqdn }}
  #server {{ name }} {{ network }}.{{ host }}:8001 ssl verify none alpn h2,HTTP/1.1 check
  server {{ name }} {{ network }}.{{ host }}:8001 check

backend cloud.{{ fqdn }}.backend
  balance roundrobin
  http-request add-header X-Forwarded-Proto https
  compression algo gzip
  compression type text/html text/plain text/css
  # https://serverfault.com/a/887396/440073
  # option httpchk HEAD / HTTP/1.1\r\nHost:\ cloud.{{ fqdn }}
  server {{ name }} {{ network }}.{{ host }}:8085 check

backend office.{{ fqdn }}.backend
  balance roundrobin
  http-request add-header X-Forwarded-Proto https
  compression algo gzip
  compression type text/html text/plain text/css
  # https://serverfault.com/a/887396/440073
  # option httpchk HEAD / HTTP/1.1\r\nHost:\ office.{{ fqdn }}
  server {{ name }} {{ network }}.{{ host }}:9980 check

backend registry.{{ fqdn }}.backend
  balance roundrobin
  http-request add-header X-Forwarded-Proto https
  compression algo gzip
  compression type text/html text/plain text/css
  # https://serverfault.com/a/887396/440073
  # option httpchk HEAD / HTTP/1.1\r\nHost:\ registry.{{ fqdn }}
  server {{ name }} {{ network }}.{{ host }}:9981 check

backend dzintars.dev.backend
  balance roundrobin
  http-request add-header X-Forwarded-Proto https
  compression algo gzip
  compression type text/html text/plain text/css
  # option httpchk HEAD / HTTP/1.1\r\nHost:\ dzintars.dev
  server {{ name }} {{ network }}.{{ host }}:8084 check

backend merumore.com.backend
  balance roundrobin
  http-request add-header X-Forwarded-Proto https
  compression algo gzip
  compression type text/html text/plain text/css
  # https://serverfault.com/a/887396/440073
  # option httpchk HEAD / HTTP/1.1\r\nHost:\ my.{{ fqdn }}
  server {{ name }} {{ network }}.{{ host }}:8082 check

backend websocket.backend
  balance roundrobin
  ## websocket protocol validation
  acl hdr_connection_upgrade hdr(Connection)                 -i upgrade
  acl hdr_upgrade_websocket  hdr(Upgrade)                    -i websocket
  acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
  acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
  http-request deny if ! hdr_connection_upgrade || ! hdr_upgrade_websocket || ! hdr_websocket_key || ! hdr_websocket_version
  ## ensure our application protocol name is valid
  ## (don't forget to update the list each time you publish new applications)
  ## !!!! Note also that HTTP/2 explicitly disallows the use of this mechanism; it is specific to HTTP/1.1.
#   acl ws_valid_protocol hdr(Sec-WebSocket-Protocol) echo-protocol
#   http-request deny if ! ws_valid_protocol
  ## websocket health checking
  option httpchk GET / HTTP/1.1\r\nHost:\ api.{{ fqdn }}\r\nConnection:\ Upgrade\r\nUpgrade:\ websocket\r\nSec-WebSocket-Key:\ haproxy\r\nSec-WebSocket-Version:\ 13\r\nSec-WebSocket-Protocol:\ echo-protocol
  http-check expect status 101
  server {{ name }} 127.0.0.1:9090 maxconn 30000 weight 10 cookie {{ name }} check
  #server websrv2 192.168.10.12:8080 maxconn 30000 weight 10 cookie websrv2 check

backend default.backend
  server {{ name }} 127.0.0.1:8888 maxconn 50 check
  http-request set-header Host Default

  # Set custom response headers
  http-response set-header X-Powered-By "Snert and brown beans"
  http-response set-header server "Microwave 2.4.001.2.5567.GA"

backend per_ip_rates
  stick-table type ip size 1m expire 10m store http_req_rate(10s)
